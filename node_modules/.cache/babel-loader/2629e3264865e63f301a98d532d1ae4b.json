{"ast":null,"code":"var _jsxFileName = \"/home/samuelximenes/Documentos/Projects/smart_infra/src/components/list/Test.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"./page.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Page = () => {\n  _s();\n  let selected = 0;\n  let limit = 200;\n  let ApiDataCount = 0;\n  let pointOut = 0;\n  const pageSplit = 20;\n  const [pageCount, setPageCount] = useState(0);\n  const [items, setItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const [PageNo, setPageNo] = useState(1);\n  const [apiCount, setApiCount] = useState();\n  const [selectionHolder, setSelectionHolder] = useState(1);\n  const storeFlag = (apiCount, selected) => {\n    if (selected % pageSplit === 0) {\n      //pageSplit means \"limit/dataPerPage = 200/10=20\"\n      pointOut = selected / pageSplit;\n      console.log(pointOut, \"after /10\");\n    } else {\n      pointOut = selected / pageSplit;\n      //console.log(pointOut, \"after /10\");\n      pointOut = Math.floor(pointOut + 1);\n      //console.log(pointOut, \"after math floor\");\n    }\n\n    return pointOut;\n  };\n  const indexOfLastItem = currentPage * itemsPerPage;\n  //console.log(currentPage, \"currentPage\")\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItem = items.slice(indexOfFirstItem, indexOfLastItem);\n  console.log(indexOfFirstItem, indexOfLastItem);\n  //console.log(items.slice(indexOfFirstItem, indexOfLastItem));\n\n  useEffect(() => {\n    const getComments = async () => {\n      const res = await fetch(`https://jsonplaceholder.typicode.com/photos?_page=${PageNo}&_limit=${limit}`);\n      refCall(res);\n      const data = await res.json();\n      console.log(\"getting 200 data\", data);\n      console.log(ApiDataCount, \"apicount\");\n      setPageCount(Math.ceil(ApiDataCount / itemsPerPage));\n      setItems(data);\n    };\n    getComments();\n  }, []);\n  const refCall = res => {\n    ApiDataCount = res.headers.get(\"x-total-count\"); // total data\n    setApiCount(ApiDataCount);\n  };\n  async function fetchComments(holder) {\n    //console.log(holder, \"holder inside fetch function before increment\");\n    //console.log(PageNo, \"pageno inside fetch function\")\n    setPageNo(holder);\n    const result = await fetch(`https://jsonplaceholder.typicode.com/photos?_page=${holder}&_limit=${limit}`);\n    const dataValue = await result.json();\n    return dataValue;\n  }\n  let holder = 1;\n  const handlePageClick = (event, value) => {\n    selected = event.selected + 1;\n    holder = storeFlag(apiCount, selected);\n    //console.log(holder, \"holder\");\n    setSelectionHolder(holder);\n    if (selectionHolder === holder) {\n      console.log(\"Selected Value & holder are same\");\n      //console.log(selected,\"selected value before modulas & holding original selected value\");\n      selected = selected % pageSplit;\n      //console.log(selected, \"selected value after modulas\");\n      setCurrentPage(selected);\n    } else {\n      console.log(\"Selcted Value & holder are not same\");\n      //console.log(selected,\"selected value before modulas & holding original selected value\");\n      selected = selected % pageSplit;\n      //console.log(selected, \"selected value after modulas\");\n      setCurrentPage(selected);\n      fetchComments(holder).then(datatwo => {\n        console.log(\"getting another 200 data\", datatwo);\n        setItems(datatwo);\n      });\n    }\n    if (selected % pageSplit === 0) {\n      selected = pageSplit;\n      setCurrentPage(selected);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Data ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Data Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Data URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"Data Thumbnail URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: currentItem.map((item, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: item.url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.thumbnailUrl,\n                alt: \"img\",\n                width: \"40\",\n                height: \"40\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        margin: \"20px 0px 0px 0px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        nextLabel: \"next>\",\n        onPageChange: handlePageClick,\n        pageRangeDisplayed: 6,\n        marginPagesDisplayed: 2,\n        pageCount: pageCount,\n        previousLabel: \"<previous\",\n        pageClassName: \"pageClassName\",\n        pageLinkClassName: \"pageLink\",\n        previousClassName: \"previousClass\",\n        previousLinkClassName: \"previousLinkClass\",\n        nextClassName: \"nextClass\",\n        nextLinkClassName: \"nextLinkClass\",\n        breakLabel: \"....\",\n        breakClassName: \"breakClass\",\n        breakLinkClassName: \"breakLinkClass\",\n        containerClassName: \"pagination\",\n        activeClassName: \"activeClass\",\n        renderOnZeroPageCount: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Page, \"/yzRUnGZJ3aTRUOidYS7WqDy14U=\");\n_c = Page;\nexport default Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"names":["React","ReactPaginate","useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Page","selected","limit","ApiDataCount","pointOut","pageSplit","pageCount","setPageCount","items","setItems","currentPage","setCurrentPage","itemsPerPage","PageNo","setPageNo","apiCount","setApiCount","selectionHolder","setSelectionHolder","storeFlag","console","log","Math","floor","indexOfLastItem","indexOfFirstItem","currentItem","slice","getComments","res","fetch","refCall","data","json","ceil","headers","get","fetchComments","holder","result","dataValue","handlePageClick","event","value","then","datatwo","minWidth","map","item","i","id","title","url","thumbnailUrl","display","justifyContent","margin"],"sources":["/home/samuelximenes/Documentos/Projects/smart_infra/src/components/list/Test.js"],"sourcesContent":["import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { useEffect, useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport \"./page.css\";\n\nconst Page = () => {\n    let selected = 0;\n    let limit = 200;\n    let ApiDataCount = 0;\n    let pointOut = 0;\n    const pageSplit = 20;\n\n    const [pageCount, setPageCount] = useState(0);\n    const [items, setItems] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [itemsPerPage] = useState(10);\n    const [PageNo, setPageNo] = useState(1);\n    const [apiCount, setApiCount] = useState();\n    const [selectionHolder, setSelectionHolder] = useState(1);\n\n    const storeFlag = (apiCount, selected) => {\n        if (selected % pageSplit === 0) {\n            //pageSplit means \"limit/dataPerPage = 200/10=20\"\n            pointOut = selected / pageSplit;\n            console.log(pointOut, \"after /10\");\n        } else {\n            pointOut = selected / pageSplit;\n            //console.log(pointOut, \"after /10\");\n            pointOut = Math.floor(pointOut + 1);\n            //console.log(pointOut, \"after math floor\");\n        }\n        return pointOut;\n    };\n\n    const indexOfLastItem = currentPage * itemsPerPage;\n    //console.log(currentPage, \"currentPage\")\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n    const currentItem = items.slice(indexOfFirstItem, indexOfLastItem);\n    console.log(indexOfFirstItem, indexOfLastItem);\n    //console.log(items.slice(indexOfFirstItem, indexOfLastItem));\n\n    useEffect(() => {\n        const getComments = async () => {\n            const res = await fetch(\n                `https://jsonplaceholder.typicode.com/photos?_page=${PageNo}&_limit=${limit}`\n            );\n            refCall(res);\n\n            const data = await res.json();\n            console.log(\"getting 200 data\", data);\n            console.log(ApiDataCount, \"apicount\");\n            setPageCount(Math.ceil(ApiDataCount / itemsPerPage));\n            setItems(data);\n        };\n        getComments();\n    }, []);\n    const refCall = (res) => {\n        ApiDataCount = res.headers.get(\"x-total-count\"); // total data\n        setApiCount(ApiDataCount);\n    };\n\n    async function fetchComments(holder) {\n        //console.log(holder, \"holder inside fetch function before increment\");\n        //console.log(PageNo, \"pageno inside fetch function\")\n        setPageNo(holder);\n        const result = await fetch(\n            `https://jsonplaceholder.typicode.com/photos?_page=${holder}&_limit=${limit}`\n        );\n        const dataValue = await result.json();\n        return dataValue;\n    }\n\n    let holder = 1;\n    const handlePageClick = (event, value) => {\n        selected = event.selected + 1;\n\n        holder = storeFlag(apiCount, selected);\n        //console.log(holder, \"holder\");\n        setSelectionHolder(holder);\n        if (selectionHolder === holder) {\n            console.log(\"Selected Value & holder are same\");\n            //console.log(selected,\"selected value before modulas & holding original selected value\");\n            selected = selected % pageSplit;\n            //console.log(selected, \"selected value after modulas\");\n            setCurrentPage(selected);\n        } else {\n            console.log(\"Selcted Value & holder are not same\");\n            //console.log(selected,\"selected value before modulas & holding original selected value\");\n            selected = selected % pageSplit;\n            //console.log(selected, \"selected value after modulas\");\n            setCurrentPage(selected);\n            fetchComments(holder).then((datatwo) => {\n                console.log(\"getting another 200 data\", datatwo);\n                setItems(datatwo);\n            });\n        }\n        if (selected % pageSplit === 0) {\n            selected = pageSplit;\n            setCurrentPage(selected);\n        }\n    };\n    return (\n        <>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow align=\"center\">\n                            <TableCell align=\"center\">Data ID</TableCell>\n                            <TableCell align=\"center\">Data Title</TableCell>\n                            <TableCell align=\"center\">Data URL</TableCell>\n                            <TableCell align=\"center\">Data Thumbnail URL</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {currentItem.map((item, i) => (\n                            <TableRow key={item.id}>\n                                <TableCell align=\"center\">{item.id}</TableCell>\n                                <TableCell align=\"center\">{item.title}</TableCell>\n                                <TableCell align=\"center\">{item.url}</TableCell>\n                                <TableCell align=\"center\">\n                                    <img\n                                        src={item.thumbnailUrl}\n                                        alt=\"img\"\n                                        width=\"40\"\n                                        height=\"40\"\n                                    ></img>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    margin: \"20px 0px 0px 0px\"\n                }}\n            >\n                <ReactPaginate\n                    nextLabel=\"next>\"\n                    onPageChange={handlePageClick}\n                    pageRangeDisplayed={6}\n                    marginPagesDisplayed={2}\n                    pageCount={pageCount}\n                    previousLabel=\"<previous\"\n                    pageClassName=\"pageClassName\"\n                    pageLinkClassName=\"pageLink\"\n                    previousClassName=\"previousClass\"\n                    previousLinkClassName=\"previousLinkClass\"\n                    nextClassName=\"nextClass\"\n                    nextLinkClassName=\"nextLinkClass\"\n                    breakLabel=\"....\"\n                    breakClassName=\"breakClass\"\n                    breakLinkClassName=\"breakLinkClass\"\n                    containerClassName=\"pagination\"\n                    activeClassName=\"activeClass\"\n                    renderOnZeroPageCount={null}\n                />\n            </div>\n        </>\n    );\n};\nexport default Page;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}