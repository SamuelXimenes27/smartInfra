{"ast":null,"code":"// import React, { useState, useMemo } from 'react';\n// import { useFetch } from '../../../hooks/useFetch';\n// import Pagination from './Pagination';\n// import './style.css';\n\n// let PageSize = 10;\n\n// const url = \"http://localhost:3000/serviceorders\";\n\n// export default function Test2() {\n//     const [currentPage, setCurrentPage] = useState(1);\n\n//     const { data: data, httpConfig, loading, error } = useFetch(url);\n\n//     const currentTableData = useMemo(() => {\n//         const firstPageIndex = (currentPage - 1) * PageSize;\n//         const lastPageIndex = firstPageIndex + PageSize;\n//         return data.slice(firstPageIndex, lastPageIndex);\n//     }, [currentPage]);\n\n//     return (\n//         <>\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>FIRST NAME</th>\n//                         <th>LAST NAME</th>\n//                         <th>EMAIL</th>\n//                         <th>PHONE</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {currentTableData.map(item => {\n//                         return (\n//                             <tr>\n//                                 <td>{item.id}</td>\n//                                 <td>{item.first_name}</td>\n//                                 <td>{item.last_name}</td>\n//                                 <td>{item.email}</td>\n//                                 <td>{item.phone}</td>\n//                             </tr>\n//                         );\n//                     })}\n//                 </tbody>\n//             </table>\n//             <Pagination\n//                 className=\"pagination-bar\"\n//                 currentPage={currentPage}\n//                 totalCount={data.length}\n//                 pageSize={PageSize}\n//                 onPageChange={page => setCurrentPage(page)}\n//             />\n//         </>\n//     );\n// }","map":{"version":3,"names":[],"sources":["/home/samuelximenes/Documentos/Projects/smart_infra/src/components/list/test/Test2.js"],"sourcesContent":["// import React, { useState, useMemo } from 'react';\n// import { useFetch } from '../../../hooks/useFetch';\n// import Pagination from './Pagination';\n// import './style.css';\n\n// let PageSize = 10;\n\n// const url = \"http://localhost:3000/serviceorders\";\n\n// export default function Test2() {\n//     const [currentPage, setCurrentPage] = useState(1);\n\n//     const { data: data, httpConfig, loading, error } = useFetch(url);\n\n\n//     const currentTableData = useMemo(() => {\n//         const firstPageIndex = (currentPage - 1) * PageSize;\n//         const lastPageIndex = firstPageIndex + PageSize;\n//         return data.slice(firstPageIndex, lastPageIndex);\n//     }, [currentPage]);\n\n//     return (\n//         <>\n//             <table>\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>FIRST NAME</th>\n//                         <th>LAST NAME</th>\n//                         <th>EMAIL</th>\n//                         <th>PHONE</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {currentTableData.map(item => {\n//                         return (\n//                             <tr>\n//                                 <td>{item.id}</td>\n//                                 <td>{item.first_name}</td>\n//                                 <td>{item.last_name}</td>\n//                                 <td>{item.email}</td>\n//                                 <td>{item.phone}</td>\n//                             </tr>\n//                         );\n//                     })}\n//                 </tbody>\n//             </table>\n//             <Pagination\n//                 className=\"pagination-bar\"\n//                 currentPage={currentPage}\n//                 totalCount={data.length}\n//                 pageSize={PageSize}\n//                 onPageChange={page => setCurrentPage(page)}\n//             />\n//         </>\n//     );\n// }"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}