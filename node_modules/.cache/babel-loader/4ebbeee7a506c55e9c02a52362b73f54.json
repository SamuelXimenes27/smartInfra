{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\n\n// 4 - custom hook\nexport const useFetch = url => {\n  _s();\n  const [data, setData] = useState(null);\n\n  // 5 - refatorando post\n  const [config, setConfig] = useState(null);\n  const [method, setMethod] = useState(null);\n  const [callFetch, setCallFetch] = useState(false);\n\n  // 6 - estado de loading\n  const [loading, setLoading] = useState(false);\n\n  // 8 - tratando erros\n  const [error, setError] = useState(false);\n\n  // 9 - desafio\n  const [itemId, setItemId] = useState(null);\n  const httpConfig = (data, method) => {\n    if (method === \"POST\") {\n      setConfig({\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      setMethod(\"POST\");\n    } else if (method === \"DELETE\") {\n      setConfig({\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setMethod(\"DELETE\");\n      setItemId(data);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      // 6 - estado de loading\n      // mudar throttling no network p 3g\n      setLoading(true);\n\n      // 8 - tratando erros\n      try {\n        const res = await fetch(url);\n        const json = await res.json();\n        setData(json);\n        setMethod(null);\n\n        // 8 - tratando erros\n        setError(null);\n      } catch (error) {\n        console.log(error.message);\n        setError(\"Houve um erro ao carregar os dados!\");\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, [url, callFetch]);\n\n  // 5 - refatorando post\n  useEffect(() => {\n    const httpRequest = async () => {\n      if (method === \"POST\") {\n        // 7 - loading no post\n        // mudar throttling no network p 3g\n        setLoading(true);\n\n        // 5 - refatorando post\n        let fetchOptions = [url, config];\n        const res = await fetch(...fetchOptions);\n        const json = await res.json();\n        setCallFetch(json);\n        // 9 - desafio\n      } else if (method === \"DELETE\") {\n        const deleteUrl = `${url}/${itemId}`;\n        const res = await fetch(deleteUrl, config);\n        const json = await res.json();\n        setCallFetch(json);\n      }\n    };\n    httpRequest();\n  }, [config]);\n  console.log(config);\n  return {\n    data,\n    httpConfig,\n    loading,\n    error\n  };\n};\n_s(useFetch, \"bhicHsVg4ZJ2Bs/y/AvHqEmYPzY=\");","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","config","setConfig","method","setMethod","callFetch","setCallFetch","loading","setLoading","error","setError","itemId","setItemId","httpConfig","headers","body","JSON","stringify","fetchData","res","fetch","json","console","log","message","httpRequest","fetchOptions","deleteUrl"],"sources":["/home/samuelximenes/Documentos/Projects/smart_infra/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n// 4 - custom hook\nexport const useFetch = (url) => {\n    const [data, setData] = useState(null);\n\n    // 5 - refatorando post\n    const [config, setConfig] = useState(null);\n    const [method, setMethod] = useState(null);\n    const [callFetch, setCallFetch] = useState(false);\n\n    // 6 - estado de loading\n    const [loading, setLoading] = useState(false);\n\n    // 8 - tratando erros\n    const [error, setError] = useState(false);\n\n    // 9 - desafio\n    const [itemId, setItemId] = useState(null);\n\n    const httpConfig = (data, method) => {\n        if (method === \"POST\") {\n            setConfig({\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(data),\n            });\n\n            setMethod(\"POST\");\n        } else if (method === \"DELETE\") {\n            setConfig({\n                method: \"DELETE\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n            });\n\n            setMethod(\"DELETE\");\n            setItemId(data);\n        }\n    };\n\n    useEffect(() => {\n        const fetchData = async () => {\n            // 6 - estado de loading\n            // mudar throttling no network p 3g\n            setLoading(true);\n\n            // 8 - tratando erros\n            try {\n                const res = await fetch(url);\n\n                const json = await res.json();\n\n                setData(json);\n\n                setMethod(null);\n\n                // 8 - tratando erros\n                setError(null);\n            } catch (error) {\n                console.log(error.message);\n\n                setError(\"Houve um erro ao carregar os dados!\");\n            }\n\n            setLoading(false);\n        };\n\n        fetchData();\n    }, [url, callFetch]);\n\n    // 5 - refatorando post\n    useEffect(() => {\n        const httpRequest = async () => {\n            if (method === \"POST\") {\n                // 7 - loading no post\n                // mudar throttling no network p 3g\n                setLoading(true);\n\n                // 5 - refatorando post\n                let fetchOptions = [url, config];\n\n                const res = await fetch(...fetchOptions);\n\n                const json = await res.json();\n\n                setCallFetch(json);\n                // 9 - desafio\n            } else if (method === \"DELETE\") {\n                const deleteUrl = `${url}/${itemId}`;\n\n                const res = await fetch(deleteUrl, config);\n\n                const json = await res.json();\n\n                setCallFetch(json);\n            }\n        };\n\n        httpRequest();\n    }, [config]);\n\n    console.log(config);\n\n    return { data, httpConfig, loading, error };\n};"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAE3C;AACA,OAAO,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACA,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;;EAE7C;EACA,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMiB,UAAU,GAAG,CAACd,IAAI,EAAEI,MAAM,KAAK;IACjC,IAAIA,MAAM,KAAK,MAAM,EAAE;MACnBD,SAAS,CAAC;QACNC,MAAM,EAAE,MAAM;QACdW,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,IAAI;MAC7B,CAAC,CAAC;MAEFK,SAAS,CAAC,MAAM,CAAC;IACrB,CAAC,MAAM,IAAID,MAAM,KAAK,QAAQ,EAAE;MAC5BD,SAAS,CAAC;QACNC,MAAM,EAAE,QAAQ;QAChBW,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFV,SAAS,CAAC,QAAQ,CAAC;MACnBQ,SAAS,CAACb,IAAI,CAAC;IACnB;EACJ,CAAC;EAEDJ,SAAS,CAAC,MAAM;IACZ,MAAMuB,SAAS,GAAG,YAAY;MAC1B;MACA;MACAV,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,IAAI;QACA,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAACtB,GAAG,CAAC;QAE5B,MAAMuB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;QAE7BrB,OAAO,CAACqB,IAAI,CAAC;QAEbjB,SAAS,CAAC,IAAI,CAAC;;QAEf;QACAM,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOD,KAAK,EAAE;QACZa,OAAO,CAACC,GAAG,CAACd,KAAK,CAACe,OAAO,CAAC;QAE1Bd,QAAQ,CAAC,qCAAqC,CAAC;MACnD;MAEAF,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDU,SAAS,EAAE;EACf,CAAC,EAAE,CAACpB,GAAG,EAAEO,SAAS,CAAC,CAAC;;EAEpB;EACAV,SAAS,CAAC,MAAM;IACZ,MAAM8B,WAAW,GAAG,YAAY;MAC5B,IAAItB,MAAM,KAAK,MAAM,EAAE;QACnB;QACA;QACAK,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,IAAIkB,YAAY,GAAG,CAAC5B,GAAG,EAAEG,MAAM,CAAC;QAEhC,MAAMkB,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGM,YAAY,CAAC;QAExC,MAAML,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;QAE7Bf,YAAY,CAACe,IAAI,CAAC;QAClB;MACJ,CAAC,MAAM,IAAIlB,MAAM,KAAK,QAAQ,EAAE;QAC5B,MAAMwB,SAAS,GAAI,GAAE7B,GAAI,IAAGa,MAAO,EAAC;QAEpC,MAAMQ,GAAG,GAAG,MAAMC,KAAK,CAACO,SAAS,EAAE1B,MAAM,CAAC;QAE1C,MAAMoB,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAI,EAAE;QAE7Bf,YAAY,CAACe,IAAI,CAAC;MACtB;IACJ,CAAC;IAEDI,WAAW,EAAE;EACjB,CAAC,EAAE,CAACxB,MAAM,CAAC,CAAC;EAEZqB,OAAO,CAACC,GAAG,CAACtB,MAAM,CAAC;EAEnB,OAAO;IAAEF,IAAI;IAAEc,UAAU;IAAEN,OAAO;IAAEE;EAAM,CAAC;AAC/C,CAAC;AAAC,GAzGWZ,QAAQ"},"metadata":{},"sourceType":"module"}